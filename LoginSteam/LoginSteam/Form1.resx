<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAPwAAACOCAYAAAAVQWWtAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        vAAADrwBlbxySQAAFMNJREFUeF7t3QmUJVV5B3DUoKIGEFxwQQSX4EIUQUU4icZoxAVcOCpookQNikY5
        LlFIorhFiBqNSNyjRlwiglGRJcjYr+re+92tqt7Sj+6enp4VZh+GGWCEkZ5+Od/bpt7t97qru18PePL/
        nXMPzHtVt6rr1Vd162510EEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANBUr9cfQURHVCqVYyvOnVj2
        /gWjWfb8laOjz6nVao9du3btQ8N1AOAPRL1eP8IRvcwZ+rTRMiJZ2qRkdCfJaK8S0TTJVuL/VyLaQzJa
        bY262ml1gff0Ar5AhHkCwP3Ihg0bDrFWvcKQ+IkS0Q4lSjMko8Yi0jSpaKMz9LU01X/aaDQeGG4LAO4j
        HOjeqHM0yboSpX19Angp6R6j4qvTND0JgQ9wH2o0Gg9IEnOKlrFdwt28aNprSVxZqVSezdsN9wUAltHk
        5ORDDEUXKRHd0yc4lzPt8V5/rNFoHBzuEwAsA65t1zL6mZLLflcflPYZEt8rl8uHh/sGAEOktX4syZLq
        E4QHPGklZL1ePyrcRwAYAmtHjiIRuTDw7stklEi4HT/cVwBYgtad/f4V7J1kSESTxhwa7jMALEKtVnsk
        qViEgTbspFV8uzN0TZa5T2SZP6dcTt6UJfZCa9R/axlvDZfPpRmj4u81Go0/CvcdABYgSZKDjZI/6hNk
        Q0sczNUs+cd169Y9blCT2+2333649/YDWonN4frtNG2MOC9cDwAWwDnzDq4V7xNgw0gzztKKVatGjw63
        O8iaNWuOsSRH+uTVIFnaWbb2WeE6AFDAypXlJ5CMt88OrOEkZ+iG7du3/3F+m9yH3nv9Qi1Kb5Ayem2W
        meeMj4/3LMP/dpZuDPPjpEncxKWS/PIAMA8uWhsSXwkDalhJq3j12rVru01qF1988QNTR2eQiia4e267
        5x6XLKa1jNZ5S+/KP6Nz8d+QWBvmy8t7S2/p/iEAMD/n3J+QjO7uE1BLThzMSWLf1NkWX1y0jM9XovR7
        Q/E678xXauXkTbxM4u03DckNfBFwRn5lZGSkG/TVavaWfo8bWsajRHRI948BgLlpJT8XBtKwkiaxstFo
        dMe/W4pPV6K0N3V2xeTk5KN79+Sgg1avXn2Y1fIHHPTW6nM7n/MYes4rzJ8vKGnq3tyby9I0SzzGHJoq
        dYzWpacRjTw1TdUxW7dufcSgikbWaNQfzIOLNm7c+LCZmZmHNxqNR/BjzMzMTDPx//Nn/B0vx6UYHiTE
        iUs9YX6MP+8sMzMzc8jOnTsP27Vr1xETExOP2rRp06NXr17N8wscxaWg9evXP35qauoxYR5zSZLkYbfe
        euuR69evf+TMzMxDwu/nwsdi8+bND1+/vvZI3o9FPl49gH9z3u+1a9ce3giOAx9TnlehXk+eNNexh4KS
        JDmMZDSoNnzJyTu6pLOtSqXycFLRzc7Q+q1btw7sNcfP9pZkRYloFZ+Qnc9T774Y5t9K8YpBAbMQV155
        5YOc06/UMvo5iWirEjyev/nIwSWLe5SMtmgS/5NYeis3X+bX3bJly2NJRBuJl5HRVq2ibc06ERVv17nE
        n7W+ay53K8loPcnSGiVKli8o+TydEMcpWaqTiKZay8VbtIxv4yZNreJdpKI7qDXvwF1axXeRiveQiuOi
        geGJTiMZbyAZ79Iq2kkyumV0dPQZ4XKDZM49n48TqWinVvEdJOMbOGjD5eZilDiPj1H7b9mpKf5C57ux
        sbEjvacTxsdHzyqX/UuK/l0wB6Oil/YrKg8j8d03c+5lnW1ZotN5W9Vq+WO9ezFblrj3cqAZI/+s+1nm
        X9tvpJ4Spd/VarXjenNYGL47aSW+pESJJ+uY9bcEaUareKJOdERnfT7ReZRfn2WLpp1hsDilTu2z3JxJ
        iZIpEhiNRuNBhsRN4fpWi8+Hyw7CF4zw93BGvS9cbpDJyclDteILzv71jRLf63w/WsnO52OSJO6i0Url
        nUX+LpiHIfkf4Y8+rMTP6fmusFrG/0QyunfdunXP692L2bZt2/bnzTxUqdvePjY29qJBY/Ctpff05rAw
        hsS7w5N3rqRlXONieWf9mZmZQ/lOGy63gLSZi8f5fdJavKTPcnMnEcX5PAYZHR19CpdawvW1jNfxI0m4
        fD+jWXZqeMwMCV+0U1SauvP44plf32r5X/xds2LXu0v40aqcuh9nif8uAn6J+LmYp5sKf/RhJSWi33Ix
        ubM9Q+qz/PzOJ1vvnsy2Y8emZ3AehuQ/dD5btWpwwBuSV/fmUFy/46BVvMlb/eFaOXljNfPnJIm+0JC8
        hou/Skb7KpX07DCPxOnLvKb/TJz+PqnoCk3ixySjq/nCt/+YlPZZLX7tHX3LarrcWf1Vnu3HGbqE77r5
        PB2Jl/XsE4nbnVbftlp9wxn1NW/pcmfUZd6qLzsjv+iMvFRreVY+j0FSbz8UHsP2/s04p88Ml+8nc25W
        wHMJjltgwmVDPOSaVFQJt++M+n5nmUqWXMjP9rVa+dWVSvp+TIqyRJWKOZYDMDzow0jNWngj/yK/Pafl
        X/MJUamk854Q1Sx7JedjSXRr+EcrlTP6nGDtVFq9yEqjg6RcwXe7e3P5TU9NTfxluBzfYVatWnW01eoD
        Rcfoj4yMPFSJ0u7ccfld0aG+VqlX5P9Gb2ii6N1zLs35DZSo5fLuuYhyPUWRu2mtlvIFeNbvYVR8Y3jx
        CnmvX9Xv4m207Ab86Kg7upz6L9TrldOrVf+8IvsEc0hTd2a/H2wYie9A4Q9UrVafSDLa7Yy6fq4Tl08W
        b+kqrpBKkuRJnc/T1A5sTVCitKdcLj+hN6dihFjxrPxJr0ns3r1795HhcovRP+BHCgW807p50eukxOuh
        BHzV++flL3CJN1cZJcb272N01/j4+JPD9UKptX0Dni+YSZJ0615CXOozJPt2pjJ6/x2e8YXVe/mU/HkA
        i5Ql7tLwgA8jaRITPJNtuL12B59/4ys7D5TpdxfgYlslSz7CAagp/mbn81Y/f5GG28qlaaLSCb25FdNs
        euu9wzey1H8+fKZejH4Bz8+l4XL9eKNend8nO6Q7vLXqy/njVqkkL+XHl/y2vNWfDNcLVavVUwYEPJfM
        rhpUBK9UKi/MP+bkkyHx3XB5GBJn6DODDvxiE0+DVS77vwq31cEnO8k4at4FnP7+5OTkKY1G43BuX56a
        mjrJOf0lDj6tYrL2N9277MTo6Gkkozn31Wv9qt6tFcOVb6SaTV89+RkS497S+0dHR48OSytFLSXgHdEZ
        PX+f1et279596p49e07eu3fviXv37j3hnnvuOb7RaBzXaDSOKjLfP9d6c/NiJ0+t4qlGkhxcqVSenq/E
        MyqenC8/nuMwH/BB8O8tl8vPDdfh48gVcwPW6XmGhyHjg88VL/zcRKLE7aA9J/xikrf6y+F2Qtz2b5T4
        Vqd3n1bx7zsXHg4Iq+Q38u3c7U43cbitPumtvVsqzml91qCLXzNISVxlLb0xXzNfRL+Al1L2jBcYxBj5
        2nBf5kgz1qp5m9Sspdfng8xo9fXOd7p1Ie7s53Sa2hf1rt2rfafu5pV5q7WKd3T+bY2cVbNer6dPzbVm
        7Bsfq1+b/ztwhz9AJqvVJzpHFxvVt896oWSUqIadR+aSpukzDMkPahV/XVN8Ocn4/VmWPS2/DBcLU28/
        H94J+iWlxDvy6y4En5jtSsW5xuJzGudpugcVV0P9Ar7oHd4Y9bo+2x+YEqe7wdsP77MmccP+fYmmq9X9
        z9rOmffl8+PfpTeHXjzwKf+7OKN+lCXuE/vziO+s1VxP/4h8r05Dorxq1cq35bfZaZaDA4SfWxOrz+X2
        1PC5dp50V7WanBLmtxRcYVOrZJ8lGRfpDMNt0O8M81ioNJWPJ4o/o0R0S9hGnEvTJON/z/f1H2QpAV9O
        ktf32fbAZLT4dphHHld8cYVcd3kl1jYajQd3vq85d5yW0e8632sZ3xqOXszjV4j1XIhVdAU3o1GrJ2Hz
        M+91t+fcxo0Tj+JeiO3vZrylt5fLvX8jT1jauxU4IPhkvjlNj+H2Ya2ijfPcYacNiYvCPBaL77Y333zz
        id7SdfNstycZEm8L81osLqmUE/M67tff7nbas63WAB/1N+F6oX4BX7RI75x+Q36bWkbjSox8qjdFn1Qi
        +rhWpY85p04N88jLEndBPj++I+e/b1aqqrg7/wAf+8zbt+eXyePXhOV/H0vyB/y5M/KS7j6raFunf3/i
        9Hv3b7+0mo9x6tyZ+X0iGaFIf1/jCjXn9NmaxAp+zm39yPEWZ9QPM28/QBSfVrSI2w/3quJuluPjtZOq
        WXKBd/p/+/UCmy9xM1aY91JxEPDAkCxzl4bP+FrF8Xx9+JcS8GkQ8EbLn4fLFMW1+1rFXGrr5pcl/moO
        wszb873V55dT//fWqN/kl7Falgb9ts6p5/fUB5C4gj/nx0OS0a725zPe0Aeb4yhk3G3681Z/iJetJPY1
        PX8j7vD3H9yMxu9/IxJn8Oiq8PvF8N4/xaj4p0qUbmu/dLL74y8wTTunnh3mPyytugSdb87iu9f6fk2L
        eRzwuZOfn5v3FA145/RZ+e1ZEr8Ilykqy7JnLuYiykX8iYmJ48P8WGrtyfmA1yrulhisVl/NfV6vpO4d
        nWV50NCGDa1m23LZ9zQ9ahXjGf7+intsWa3+WfHoMhn9hHugFZ1Gmh8ZksSeq2Q0lFl2+G21lUplQUND
        87gzyKA7WUfq9ad6txuvKRLwSpRyAV8qHPBpEPDe0E1hrXdRztBF4TErmpxV/xrmx9LUnNQb8LIb8LUk
        OT5fG08q5lF9rfwMfaKzXNkj4P+gNIOe6HSjJY+84kq+W6pz9LJiPA6+3Ra7lDt6T9Iq4nH381ai9cNB
        pLX8nFHieufMeRO12vHt8eoHc+Jx7NVqema+yam1zfhX8wVg6w5f6tYBcKVZvT5SqCUjDPjM2yqPpedm
        yk7i/eRJP3lsPA855v+G+XBX3tbw2m5e+3iorlHxFh4zQCq+hQfNcJs8yYiL3d2idyv1b5P3nrjH3v4e
        irk7fLO93agrevPhVNqWvzB7b3oCHkX6ZTbfHaoozmdstHK2pngnj7G21s4a784nQa2WvVjLeHz2ibC0
        xK+tDrdXFJ+A+eds7uBjlNiSWD3hnRnXJLjWOez3fS+/LjvMK8QXxPbjSms9Ed0xMrK4gOd9cEZtt1q2
        xtfL6DauUNRK7DYk7tRK7DFKlGblE3ShNioe40cybpHhkXF80eCA5hr7VskrOaw9tr+z3Wke2xDm65w6
        MX9cOs/wHVwCCB8jeJBPfpnM+1flv0fAL7PEmYu4GyXPJjvf3aqIer16TnPueBKX5j/nSpvEmc8s11Ra
        3ptFN8lxu3qY3zxpn1bRZfM9ArDrrrvuIXxXy627i49FuFw/YaVdoSQiyufBjyrWqF/ll7FafSq/TD9G
        905XbrWcNaDGWvnc4A4f9oN/oCXBFbCdfHZPVCrH5pdJ05TnSOhuBwG/zPz+gRS7rJbfqaXpi5Zy1+dp
        kryjMa6R7eRTLusnGyVkz4k5xKRVdAePYgv3pagksa8wSvDNsW9PuyDdyU1h9Xq92349F16ORKl7t1Qi
        ui0/i89cLNGC2uFbqaTyebR7tnUvstxKEHZu6id1+ux8qYAfRcbGKk/PL1P1/oTegBeX5b9nzhGPcGz2
        pLRGziqF1TLXMwTYkULALycucmoSN+cO+r2aYu0tvSfLslnPg0WkifuZEtFuHvDC01WRLFVnn5jDS1bL
        H4d3n4Xi5//MmOcYii82WvALNLkykQNlL1cIkorqhuIvGmOeGa47l+a0WUZ9m+s4LMkbuVKqfuWVhS4W
        1tqTDYkbrJYrLIkV1qgbjZbXOy1/7S390hn9c2fpZ/y2Hr4jcxdpraIL83nwwCBn6CarpXSWYv4bilzQ
        +XczWl5jjZK8Lu97YkxP3QyfHyRLX1Cy9FWSpcspHjk9/z3jbfGryzj1u9Dxo58W0ZcoLl3OeRgVz9u3
        AZbIWnpX315l/JxI8ptalwrPc9bsomrpWlLxJg6ier3OnTPC599hprvL1s4apLEU7bb3w1oTRNaP4kke
        FzvWPmcpFyRed0nr89+0iIviYteD+zMeQcW1tH2CqZm4QqtIBRVbuXLlcVrFd2oV/5D/zZ06wvyGmlT8
        S5yQAAtktTx3rm6s1qgSF0+5b7XV6sP1ev2pYaBt3LjxUVzs5Odca+XJ7bt9vtJmqEnJ6G5uGsrvAwAU
        0J7XbeBbY7nShaemagaxUe9TItrhDV1TLid/N1qpvMYb+qgluYY7WxilmqPWxsZqLy9YEbaoZEh8K7zo
        AEBB7XbTgTOvahWvn5qaeloz6IlezH3J27XWv2+OwlLxb72n0ziv5osgtVgV5jG8VFqz2EpFAGjTWlww
        V9Ge3xO3amyMm+6alTmVinqMiaJj211qm5/x7LLe0Ky3xAwrtSbJULMmmQSABeLaaJLRD8IgyyceUJE4
        +51alr2Ye2zt2LHj0M2bW9MJe0tXaBUveJDGAtK0lvGHUJQHGJLmvHMq/m2fYOuT4rutlru0ipdluut8
        4pIH93ArMvEEACyAtfbI4kG//KkV7PHXi/ZwA4AF4okktYp/Mdcz/QFK93LffAQ7wDJrjXkX/8JvUu0T
        iAci7XJa/W3+lVUAsIx41JP3+uWk4sm+XXCXIbVLFQkPwQz3BwAOACI6wpD8NI/4CgN0qEmUtholPjKM
        N78AwBI5547moZD8TvNh3fHbNfDrHcmLlzJVFQAsjweMjY09znvzbt2c5KC0baGj4lrLx9stiWud02/m
        mWvDjQDA/Qx3guFpkbi7rdXi4zyOmt9Co0Tp1tabXErblIw28zvYtYyk0fKnJOOPlr1/CY/UQycagD9w
        3DmGiA7hSQ84bdhAh/B0TwhuAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD4/+b/AFg9ZPXBXj6VAAAA
        AElFTkSuQmCC
</value>
  </data>
</root>